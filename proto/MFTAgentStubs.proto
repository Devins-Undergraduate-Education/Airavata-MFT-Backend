/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

 syntax = "proto3";

 option java_multiple_files = true;
 package org.apache.airavata.mft.agent.stub;
 

 import "local/LocalStorage.proto";


 message FileMetadata {
     string friendlyName = 1;
     int64 resourceSize = 2;
     int64 createdTime = 3;
     int64 updateTime = 4;
     string md5sum = 5;
     string resourcePath = 6;
 }
 
 message DirectoryMetadata {
     string friendlyName = 1;
     int64 createdTime = 2;
     int64 updateTime = 3;
     string resourcePath = 4;
     repeated DirectoryMetadata directories = 5;
     repeated FileMetadata files = 6;
 }
 
 enum MetadataFetchError {
     NOT_FOUND = 0;
     NO_PERMISSION = 1;
 }
 
 message ResourceMetadata {
     oneof metadata {
         FileMetadata file = 1;
         DirectoryMetadata directory = 2;
         MetadataFetchError error = 3;
     }
 }


message StorageWrapper {
    oneof storage {
        org.apache.airavata.mft.resource.stubs.local.storage.LocalStorage local = 6;
    }
}

message SecretWrapper {
    oneof secret {
        org.apache.airavata.mft.credential.stubs.scp.SCPSecret scp = 8;
    }
}

 message GetResourceMetadataRequest {
    string resourcePath = 1;
    StorageWrapper storage = 2;
    SecretWrapper secret = 3;
    bool recursiveSearch = 4;
}